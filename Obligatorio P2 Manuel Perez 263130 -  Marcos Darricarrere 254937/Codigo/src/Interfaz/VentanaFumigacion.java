//  Manuel Perez 263130 -  Marcos Darricarrere 254937

package Interfaz;

import Dominio.Empresa;
import Dominio.Fumigacion;
import Dominio.Piloto;
import Dominio.Producto;
import Dominio.Tecnico;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import javax.swing.JOptionPane;

public class VentanaFumigacion extends javax.swing.JFrame implements PropertyChangeListener {
    private Empresa modelo;

    //Creamos una variable para cada dato.
    private Piloto piloto;
    private Producto producto;
    private Tecnico tecnico;
    private int dia;
    private String zona;

    //Creo un boolean para cada dato.
    private boolean pilotoCorrecto = false;
    private boolean tecnicoCorrecto = false;
    private boolean productoCorrecto = false;
    private boolean diaCorrecto = false;
    private boolean validarDatos = false;
    private boolean zonaFumigaciionCorrecta = false;

    public VentanaFumigacion() {
        initComponents();
    }

    VentanaFumigacion(Empresa empresa) {
        initComponents();
        for (int i = 1; i <= 31; i++) {
            comboDia.addItem(Integer.toString(i));
        }
        this.modelo = empresa;
        modelo.addPropertyChangeListener(this);
        cargarCombos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        textoZona = new javax.swing.JTextField();
        comboDia = new javax.swing.JComboBox<>();
        comboPiloto = new javax.swing.JComboBox();
        comboProducto = new javax.swing.JComboBox();
        comboTecnico = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        boton = new javax.swing.JButton();
        botonCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Registro de Fumigaciones");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMaximumSize(new java.awt.Dimension(400, 350));
        setMinimumSize(new java.awt.Dimension(400, 350));
        setSize(new java.awt.Dimension(400, 350));
        getContentPane().setLayout(null);

        jLabel1.setText("Registro de Fumigaciones:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(130, 30, 190, 14);

        jLabel2.setText("Elija un Tecnico:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(230, 130, 100, 14);

        jLabel3.setText("Elija un Piloto:");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(80, 70, 80, 14);

        jLabel4.setText("Elija un Producto:");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(70, 130, 100, 14);

        jLabel5.setText("Elija la zona a fumigar:");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(140, 180, 180, 20);

        textoZona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textoZonaActionPerformed(evt);
            }
        });
        getContentPane().add(textoZona);
        textoZona.setBounds(130, 200, 130, 20);

        comboDia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboDiaActionPerformed(evt);
            }
        });
        getContentPane().add(comboDia);
        comboDia.setBounds(220, 90, 110, 20);

        comboPiloto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboPilotoActionPerformed(evt);
            }
        });
        getContentPane().add(comboPiloto);
        comboPiloto.setBounds(60, 90, 110, 20);

        comboProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboProductoActionPerformed(evt);
            }
        });
        getContentPane().add(comboProducto);
        comboProducto.setBounds(60, 150, 110, 20);

        comboTecnico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboTecnicoActionPerformed(evt);
            }
        });
        getContentPane().add(comboTecnico);
        comboTecnico.setBounds(220, 150, 110, 20);

        jLabel6.setText("Elija el dia:");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(230, 70, 80, 14);

        boton.setText("AÃ±adir");
        boton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonActionPerformed(evt);
            }
        });
        getContentPane().add(boton);
        boton.setBounds(30, 260, 90, 23);

        botonCancelar.setText("Cancelar");
        botonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCancelarActionPerformed(evt);
            }
        });
        getContentPane().add(botonCancelar);
        botonCancelar.setBounds(283, 260, 90, 23);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboPilotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboPilotoActionPerformed

    }//GEN-LAST:event_comboPilotoActionPerformed

    private void comboProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboProductoActionPerformed

    }//GEN-LAST:event_comboProductoActionPerformed

    private void comboTecnicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboTecnicoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboTecnicoActionPerformed

    private void comboDiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboDiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboDiaActionPerformed

    private void textoZonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textoZonaActionPerformed

    }//GEN-LAST:event_textoZonaActionPerformed

    private void botonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonActionPerformed
        validarDatos();
        validarFumigacion();
    }//GEN-LAST:event_botonActionPerformed

    private void botonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCancelarActionPerformed
        dispose();
    }//GEN-LAST:event_botonCancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaFumigacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaFumigacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaFumigacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaFumigacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaFumigacion().setVisible(true);
            }
        });
    }

    public void cargarCombos() {
        comboPiloto.removeAllItems();
        for (Piloto piloto : modelo.getListaPilotos()) {
            comboPiloto.addItem(piloto);
        }

        comboProducto.removeAllItems();
        for (Producto producto : modelo.getListaProductos()) {
            comboProducto.addItem(producto);
        }

        comboTecnico.removeAllItems();
        for (Tecnico tecnico : modelo.getListaTecnicos()) {
            comboTecnico.addItem(tecnico);
        }
            comboDia.setSelectedIndex(-1);
            comboPiloto.setSelectedIndex(-1);
            comboProducto.setSelectedIndex(-1);
            comboTecnico.setSelectedIndex(-1);
    }

    @Override
    public void propertyChange(PropertyChangeEvent event) {
        cargarCombos();
    }

    public boolean validarDatos() {
        //Validar Piloto.
        try {
            piloto = (Piloto) comboPiloto.getSelectedItem();
            
                if(comboPiloto.getSelectedIndex()!=-1){

                    pilotoCorrecto = true;

                }else {
                    JOptionPane.showMessageDialog(null, "Debe seleccionar un Piloto!",
                    "Debe seleccionar un Piloto!", JOptionPane.WARNING_MESSAGE);
                }
            
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un Piloto!",
                    "Debe seleccionar un Piloto!", JOptionPane.WARNING_MESSAGE);
        }

        //Validar Tecnico.
        try {
            tecnico = (Tecnico) comboTecnico.getSelectedItem();
                if(comboTecnico.getSelectedIndex()!=-1){
                    tecnicoCorrecto = true;
                } else {
                    JOptionPane.showMessageDialog(null, "Debe seleccionar un Tecnico!",
                    "Debe seleccionar un Tecnico!", JOptionPane.WARNING_MESSAGE);
                }
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un Tecnico!",
                    "Debe seleccionar un Tecnico!", JOptionPane.WARNING_MESSAGE);
        }

        //Validar Producto.
        try {
            producto = (Producto) comboProducto.getSelectedItem();
                if(comboProducto.getSelectedIndex()!=-1){

                    productoCorrecto = true;

                }else {
                    JOptionPane.showMessageDialog(null, "Debe seleccionar un Producto!",
                    "Debe seleccionar un Producto!", JOptionPane.WARNING_MESSAGE);
                }         
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un Producto!",
                    "Debe seleccionar un Producto!", JOptionPane.WARNING_MESSAGE);
        }

        //Validar dia
        try {
            dia = Integer.parseInt(comboDia.getSelectedItem().toString());
            if (dia != 0) {
                diaCorrecto = true;
            }
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un dia!",
                    "Debe seleccionar un dia!", JOptionPane.WARNING_MESSAGE);
        }

        if (pilotoCorrecto && tecnicoCorrecto && productoCorrecto && diaCorrecto) {
            validarDatos = true;
        }
        return validarDatos;
    }

    public void validarFumigacion() {
        //Validar la zona de fumigacion
        String[] letras = new String[]{"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "I", "M", "N", "O"};
        boolean areasUnoCorrecta = false;
        boolean areasDosCorrecta = false;
        boolean numerosCorrectos = false;

        String letraUno;
        String letraDos;
        zona = textoZona.getText();
        String[] textoDividido = zona.split("-");
        if (textoDividido.length == 4) {
            for (int i = 0; i < textoDividido.length; i++) {
                letraUno = textoDividido[0];
                letraDos = textoDividido[2];
                for (int j = 0; j < letras.length; j++) {
                    if (letras[j].equals(letraUno)) {
                        areasUnoCorrecta = true;
                    }
                    if (letras[j].equals(letraDos)) {
                        areasDosCorrecta = true;
                    }
                }
            }
            if (!areasUnoCorrecta || !areasDosCorrecta) {
                JOptionPane.showMessageDialog(null, "La fila o columna fue ingresada incorrectamente, ingrese letras MAYUSCULAS de la A a la O!",
                        "La fila fue ingresada incorrectamente!", JOptionPane.WARNING_MESSAGE);
                textoZona.setText("");
            }

            if (Integer.parseInt(textoDividido[1]) <= 50 && Integer.parseInt(textoDividido[1]) > 0 && Integer.parseInt(textoDividido[3]) <= 50 && Integer.parseInt(textoDividido[3]) > 0) {
                numerosCorrectos = true;
            } else {
                JOptionPane.showMessageDialog(null, "La columna fue ingresada incorrectamente, ingrese un numero entre 0 y 50!",
                        "La columna fue ingresada incorrectamente!", JOptionPane.WARNING_MESSAGE);
                textoZona.setText("");
            }

            if (areasUnoCorrecta && areasDosCorrecta && numerosCorrectos) {
                zonaFumigaciionCorrecta = true;
            }

        } else {
            if (zona.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Ingrese un area de fumigacion!",
                        "Ingrese un area de fumigacion!", JOptionPane.WARNING_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Area de fumigacion incorrecta!",
                        "Area de fumigacion incorrecta!", JOptionPane.WARNING_MESSAGE);
                textoZona.setText("");
            }

        }

        //Si todos los booleans dan true entonces agrego la fumigacion a la lista.
        if (validarDatos && zonaFumigaciionCorrecta) {
            Fumigacion nuevaFumigacion = new Fumigacion(this.piloto, this.tecnico, this.producto, this.dia, this.zona);
            modelo.agregarFumigacion(nuevaFumigacion);
            // Se actualiza la matriz de fumigaciones
            modelo.actualizarMatriz(this.zona,false);
            textoZona.setText("");
            comboDia.setSelectedIndex(-1);
            comboPiloto.setSelectedIndex(-1);
            comboProducto.setSelectedIndex(-1);
            comboTecnico.setSelectedIndex(-1);
            JOptionPane.showMessageDialog(null, "El area de fumigacion fue ingresada correctamente!",
                    "El area de fumigacion fue ingresada correctamente!", JOptionPane.PLAIN_MESSAGE);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton boton;
    private javax.swing.JButton botonCancelar;
    private javax.swing.JComboBox<String> comboDia;
    private javax.swing.JComboBox comboPiloto;
    private javax.swing.JComboBox comboProducto;
    private javax.swing.JComboBox comboTecnico;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField textoZona;
    // End of variables declaration//GEN-END:variables
}
